name: Build and Release Windows Wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install maturin
        run: pip install maturin

      - name: Download Npcap SDK
        run: |
          Invoke-WebRequest -Uri https://nmap.org/npcap/dist/npcap-sdk-1.13.zip -OutFile npcapsdk.zip
          Expand-Archive npcapsdk.zip -DestinationPath $env:USERPROFILE\npcap-sdk

      - name: Set Environment Variables
        run: |
          echo "INCLUDE=$env:INCLUDE;$env:USERPROFILE\npcap-sdk\Include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "LIB=$env:LIB;$env:USERPROFILE\npcap-sdk\Lib\x64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Build wheel
        run: maturin build --release

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-wheel-${{ matrix.python-version }}
          path: target/wheels/*.whl

  release:
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download wheel artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./wheels

      - name: Create Release and Upload Wheels
        uses: softprops/action-gh-release@v1
        with:
          files: ./wheels/**/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

